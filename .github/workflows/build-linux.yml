name: build-linux-x86_64
run-name: Building All in Anki for Anki ${{ inputs.version }} on Linux x86_64

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Anki release version
        required: true

jobs:
  build-package:
    runs-on: ubuntu-latest
    env:
      output_name: "allinanki-${{ inputs.version }}-linux-x86_64"
    steps:
      - uses: actions/checkout@v5
      - uses: awalsh128/cache-apt-pkgs-action@acb598e5ddbc6f68a970c5da0688d2f3a9f04d05 # v1.6.0
        with:
          packages: |
            libxcb-xkb1 libpulse0 libxcb-cursor0 libxcb-util1 libxcb-image0
            libxcb-keysyms1 libxcb-render-util0 libxcb-icccm4 libxcb-shape0
            libxkbcommon-x11-0
          version: 1.0
      - uses: actions/setup-python@v6
        with:
          python-version: "3.10"
          cache: "pip"
      - name: "Install prerequisities"
        run: python -m pip install -r requirements.txt anki-release==${{ inputs.version }}
      - name: "Patch aqt module"
        run: python patches/patch_aqt.py
      - name: "Build package"
        run: pyinstaller --onedir --hidden-import anki --hidden-import aqt --collect-all _aqt --noconfirm --name Anki allinanki.py
      - name: "Include extra files"
        run: |
          mkdir dist/Anki/resources
          cp resources/anki.desktop resources/anki.xml resources/anki.png dist/Anki/resources
          cp scripts/install.sh scripts/uninstall.sh dist/Anki
          cp README.md LICENSE dist/Anki
      - name: "Compress output"
        run: |
          tar -czf dist/${{ env.output_name }}.tar.gz -C dist/ Anki/
          sha256sum dist/${{ env.output_name }}.tar.gz
      - name: "Upload artifact"
        uses: actions/upload-artifact@v5
        with:
          name: "${{ env.output_name }}"
          path: "dist/${{ env.output_name }}.tar.gz"
          compression-level: 0
          if-no-files-found: error
